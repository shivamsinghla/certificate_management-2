{"ast":null,"code":"var _jsxFileName = \"E:\\\\ZIDIO\\\\project 1 certificate verification\\\\certificate_management 2\\\\certificate_management\\\\frontend\\\\param\\\\src\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport \"./AdminDashboard.css\"; // Import CSS file\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [excelFile, setExcelFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const [logs, setLogs] = useState([]); // Initialize as an empty array\n\n  const handleFileChange = event => {\n    setExcelFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!excelFile) {\n      setUploadStatus(\"Please select a file to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"excelFile\", excelFile);\n    try {\n      const response = await axios.post(\"http://localhost:3010/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      // Ensure logs is an array\n      const fetchedLogs = Array.isArray(response.data.logs) ? response.data.logs : [];\n      setUploadStatus(\"File uploaded successfully!\");\n      setLogs(fetchedLogs);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setUploadStatus(\"Error uploading file: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload Excel File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-status\",\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/student\",\n          children: \"Go to Student Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/certificate-generator\",\n          children: \"Generate Certificates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), Array.isArray(logs) && logs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: log\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(AdminDashboard, \"NNInPS42IOpKhkF3fdILcNchB4I=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","axios","Link","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","excelFile","setExcelFile","uploadStatus","setUploadStatus","logs","setLogs","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","fetchedLogs","Array","isArray","data","error","console","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","to","length","map","log","index","_c","$RefreshReg$"],"sources":["E:/ZIDIO/project 1 certificate verification/certificate_management 2/certificate_management/frontend/param/src/AdminDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./AdminDashboard.css\"; // Import CSS file\r\nimport Header from \"./Header\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [excelFile, setExcelFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n  const [logs, setLogs] = useState([]); // Initialize as an empty array\r\n\r\n  const handleFileChange = (event) => {\r\n    setExcelFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!excelFile) {\r\n      setUploadStatus(\"Please select a file to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"excelFile\", excelFile);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3010/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" }\r\n      });\r\n      // Ensure logs is an array\r\n      const fetchedLogs = Array.isArray(response.data.logs) ? response.data.logs : [];\r\n      setUploadStatus(\"File uploaded successfully!\");\r\n      setLogs(fetchedLogs);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      setUploadStatus(\"Error uploading file: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className=\"container\">\r\n      <h1>Admin Dashboard</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload Excel File</button>\r\n      <p className=\"upload-status\">{uploadStatus}</p>\r\n\r\n      <nav>\r\n        <Link to=\"/student\">Go to Student Portal</Link>\r\n        <br />\r\n        <Link to=\"/certificate-generator\">Generate Certificates</Link>\r\n      </nav>\r\n\r\n      {Array.isArray(logs) && logs.length > 0 && (\r\n        <div>\r\n          <h2>Upload Logs</h2>\r\n          <ul>\r\n            {logs.map((log, index) => (\r\n              <li key={index}>{log}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}