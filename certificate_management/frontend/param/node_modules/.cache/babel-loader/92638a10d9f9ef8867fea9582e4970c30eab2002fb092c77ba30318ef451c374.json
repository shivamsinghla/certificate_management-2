{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Music\\\\certificate_management\\\\certificate_management\\\\certificate_management\\\\frontend\\\\param\\\\src\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport \"./AdminDashboard.css\"; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [excelFile, setExcelFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const [logs, setLogs] = useState([]); // Initialize as an empty array\n\n  const handleFileChange = event => {\n    setExcelFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!excelFile) {\n      setUploadStatus(\"Please select a file to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"excelFile\", excelFile);\n    try {\n      const response = await axios.post(\"http://localhost:3010/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      // Ensure logs is an array\n      const fetchedLogs = Array.isArray(response.data.logs) ? response.data.logs : [];\n      setUploadStatus(\"File uploaded successfully!\");\n      setLogs(fetchedLogs);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setUploadStatus(\"Error uploading file: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upload-status\",\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/student\",\n        children: \"Go to Student Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/certificate-generator\",\n        children: \"Generate Certificates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), Array.isArray(logs) && logs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"NNInPS42IOpKhkF3fdILcNchB4I=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","AdminDashboard","_s","excelFile","setExcelFile","uploadStatus","setUploadStatus","logs","setLogs","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","fetchedLogs","Array","isArray","data","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","to","length","map","log","index","_c","$RefreshReg$"],"sources":["C:/Users/admin/Music/certificate_management/certificate_management/certificate_management/frontend/param/src/AdminDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./AdminDashboard.css\"; // Import CSS file\r\n\r\nconst AdminDashboard = () => {\r\n  const [excelFile, setExcelFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n  const [logs, setLogs] = useState([]); // Initialize as an empty array\r\n\r\n  const handleFileChange = (event) => {\r\n    setExcelFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!excelFile) {\r\n      setUploadStatus(\"Please select a file to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"excelFile\", excelFile);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3010/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" }\r\n      });\r\n      // Ensure logs is an array\r\n      const fetchedLogs = Array.isArray(response.data.logs) ? response.data.logs : [];\r\n      setUploadStatus(\"File uploaded successfully!\");\r\n      setLogs(fetchedLogs);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      setUploadStatus(\"Error uploading file: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Admin Dashboard</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload Excel File</button>\r\n      <p className=\"upload-status\">{uploadStatus}</p>\r\n\r\n      <nav>\r\n        <Link to=\"/student\">Go to Student Portal</Link>\r\n        <br />\r\n        <Link to=\"/certificate-generator\">Generate Certificates</Link>\r\n      </nav>\r\n\r\n      {Array.isArray(logs) && logs.length > 0 && (\r\n        <div>\r\n          <h2>Upload Logs</h2>\r\n          <ul>\r\n            {logs.map((log, index) => (\r\n              <li key={index}>{log}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}